# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"
# ZSH_THEME="spaceship"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions zsh-syntax-highlighting autoswitch_virtualenv)
# plugins=(git zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# User configuration

#export DOCKER_HOST=tcp://localhost:2375
#export DOCKER_BUILDKIT=1

source ~/.ssh/tokens.sh 
# source ~/.ssh/ddns.sh 

# adding a colour coded $ on the end of the prompt
NEWLINE=$'\n'
PROMPT='%{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'
export PROMPT="${PROMPT}%{$fg_bold[green]%}${NEWLINE}%(?:%{$fg_bold[green]%}\$:%{$fg_bold[red]%}\$)%{$reset_color%} "
export PATH=$(brew --prefix openvpn)/sbin:$(brew --prefix vim)/bin:/usr/local/sbin:/usr/local/bin:/home/spindicator/.local/bin:$PATH

# visual and git editor setting
export VISUAL=$(brew --prefix vim)/bin/vim
export EDITOR=${VISUAL}
export GIT_EDITOR=${VISUAL}

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# Alias                                                                                                                                                                                                                                     alias d='docker'
alias bat='batcat'
alias b='browsh --startup-url www.duckduckgo.com'
alias diff='colordiff'
alias dc='docker-compose'
alias dm='docker-machine'
alias dms='socat TCP-LISTEN:2376,reuseaddr,fork,bind=127.0.0.1 UNIX-CLIENT:/var/run/docker.sock'
alias e='date +"%s"'
alias e2d='f(){ date -d @"$1"; unset -f f; }; f'
alias ep1d="echo \"\`e\` + 86400\" | bc"
alias ep1m="echo \"\`e\` + (86400 * 30)\" | bc"
alias ep2d="echo \"\`e\` + 86400 + 86400\" | bc"
alias ep2m="echo \"\`e\` + (86400 * 60)\" | bc"
alias ep3m="echo \"\`e\` + (86400 * 90)\" | bc"
alias git_kill_local='git branch --merged origin/master | grep -v master | xargs git branch -d'
if [ -f "$(brew --prefix grep)/bin/grep" ]; then
  alias grep="$(brew --prefix grep)/bin/grep"
elif [ -f "$(brew --prefix grep)/bin/ggrep" ]; then
  alias grep="$(brew --prefix grep)/bin/ggrep"
fi
alias h='history'
alias ip='curl ifconfig.co'
alias ll='ls -al'
alias lll='find . | grep'
alias ls='gls --color=tty --group-directories-first'
alias n='nb'
alias python="$(brew --prefix python)/bin/python3"
alias pip="$(brew --prefix python)/bin/pip3"
alias t='tree -C'
alias vd='visidata'

# Google SDK CLI
if [ -d "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/" ]; then
  # if we have the mac cask installed
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
fi
# Google Cloud SDK does not like pyenv pythons so use the brew
# export CLOUDSDK_PYTHON=/home/linuxbrew/.linuxbrew/opt/python@3.9/bin/python3.9
export CLOUDSDK_PYTHON=/home/linuxbrew/.linuxbrew/Cellar/python@3.9/3.9.7_1/bin/python3
# Dagster
# export DAGSTER_HOME=/Users/conor.boydrvu.co.uk/Code/dagster-home

# Kubectl completion
[[ /usr/local/bin/kubectl ]] && source <(kubectl completion zsh)

# # iterm shell integration
# test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Terraform autocomplete
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/bin/terraform terraform

# Pyenv
# export PYTHON_CONFIGURE_OPTS="--enable-shared"
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init --path)"
# eval "$(pyenv init -)"

# Home
cd ~/
